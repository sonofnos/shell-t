name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # macOS builds
          - os: macos-latest
            target: x86_64-apple-darwin
            name: shell-t-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: shell-t-macos-arm64

          # Linux GNU builds
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: shell-t-linux-x64-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: shell-t-linux-arm64-gnu
            cross: true

          # Linux musl builds (static linking)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: shell-t-linux-x64-musl
            cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            name: shell-t-linux-arm64-musl
            cross: true

          # Windows MSVC builds
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: shell-t-windows-x64-msvc.exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            name: shell-t-windows-arm64-msvc.exe

          # Windows GNU builds
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            name: shell-t-windows-x64-gnu.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross (for cross-compilation)
      if: matrix.cross == true
      run: cargo install cross

    - name: Build release (native)
      if: matrix.cross != true
      run: cargo build --release --target ${{ matrix.target }}

    - name: Build release (cross-compilation)
      if: matrix.cross == true
      run: cross build --release --target ${{ matrix.target }}

    - name: Package binary
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ matrix.name }}" == *.exe ]]; then
          cp shell-t.exe ${{ matrix.name }}
        else
          cp shell-t ${{ matrix.name }}
          chmod +x ${{ matrix.name }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: target/${{ matrix.target }}/release/${{ matrix.name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}